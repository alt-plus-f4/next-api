generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id      String    @id @default(cuid())
  email   String    @unique
  name    String?
  image   String?
  balance Float     @default(0)
  emailVerified DateTime? @map("email_verified")
  Account       Account[]
  Session       Session[]
}

model History {
  id     Int  @id @default(autoincrement())
  caseId Int
  skinId Int
  case   Case @relation(fields: [caseId], references: [id])
  skin   Skin @relation(fields: [skinId], references: [id])
}

model Case {
  id      Int       @id @default(autoincrement())
  name    String
  image   String
  skins   Skin[]
  History History[]
}

model Skin {
  id       Int       @id @default(autoincrement())
  name     String
  rarity   String
  imageURL String
  caseId   Int
  case     Case      @relation(fields: [caseId], references: [id])
  History  History[]
}
